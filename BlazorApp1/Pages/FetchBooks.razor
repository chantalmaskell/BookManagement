@page "/fetchbooks"
@using BlazorApp1.Models
@using System.Net.Http.Json
@inject HttpClient Http

<h1>Browse your collection of books</h1>

<p>What have you been reading?</p> 

@if (Books == null)
{
    <p>Loading...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th hidden>Book ID</th>
                <th>Title</th>
                <th>Genre</th>
                <th>Author</th>
                <th>Number of pages</th>
                <th>Status (read or not read)</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var book in Books)
            {
                <tr>
                    <td>@book.book_title</td>
                    <td>@book.book_genre</td>
                    <td>@book.author</td>
                    <td>@book.page_count</td>
                    <td>
                        @book.hasbeenread
                        <button @onclick="() => RemoveBook(book.book_id)">Remove book</button>
                    </td>
                </tr>
            }
        </tbody>
        <button>Add new book</button>
    </table>
}
@code {
    private IEnumerable<Book> Books;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Books = await Http.GetFromJsonAsync<IEnumerable<Book>>("https://localhost:7097/books");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    public class Book
    {
        public int book_id { get; set; }
        public string book_title { get; set; }
        public string book_genre { get; set; }
        public string author { get; set; }
        public int page_count { get; set; }
        public int hasbeenread { get; set; }
    }

    private async Task RemoveBook(int book_id)
    {
        var response = await Http.DeleteAsync($"https://localhost:7097/remove-book/{book_id}");
        if (response.IsSuccessStatusCode)
        {
            await OnInitializedAsync();
        }
    }
}